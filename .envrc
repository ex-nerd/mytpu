#!/bin/bash

# Direnv loader
# See https://direnv.net/man/direnv-stdlib.1.html for special functions

# Initializes and uses a python environment using pyenv
# Based on pyenv setup from https://github.com/direnv/direnv/wiki/Python
# See also https://github.com/direnv/direnv/blob/master/stdlib.sh
use_pyenv() {

    if ! has pyenv; then
        log_error "Error: pyenv is not installed."
        return 1
    fi

    unset PYENV_VERSION
    # Because each python version is prepended to the PATH, add them in reverse order
    for ((j = $#; j >= 1; j--)); do
        local python_version=${!j}
        local pyenv_python=$(pyenv root)/versions/${python_version}/bin/python
        local fresh_install=

        if [[ ! -f "$pyenv_python" ]]; then
            log_status "Installing python $python_version via pyenv"
            pyenv install "$python_version"
        fi

        if [[ ! -x "$pyenv_python" ]]; then
            log_error "Error: $pyenv_python can't be executed."
            return 1
        fi

        unset PYTHONHOME
        local ve=$($pyenv_python -c "import pkgutil; print('venv' if pkgutil.find_loader('venv') else ('virtualenv' if pkgutil.find_loader('virtualenv') else ''))")

        case $ve in

            "venv")
                VIRTUAL_ENV=$(direnv_layout_dir)/python-$python_version
                export VIRTUAL_ENV
                if [[ ! -d $VIRTUAL_ENV ]]; then
                    $pyenv_python -m venv "$VIRTUAL_ENV"
                    fresh_install=1
                fi
                PATH_add "$VIRTUAL_ENV"/bin
                ;;

            "virtualenv")
                layout_python "$pyenv_python"
                ;;

            *)
                log_error "Error: neither venv nor virtualenv are available to ${pyenv_python}."
                return 1
                ;;

        esac

        # e.g. Given "use pyenv 3.6.9 2.7.16", PYENV_VERSION becomes "3.6.9:2.7.16"
        [[ -z "$PYENV_VERSION" ]] && PYENV_VERSION=$python_version || PYENV_VERSION="${python_version}:$PYENV_VERSION"

        # If this is a fresh install, make sure pip is up to date
        if [[ ! -z $fresh_install ]]; then
            pip install --upgrade pip
            pip install black
        fi

    done

    export PYENV_VERSION

}

main() {

    mkdir -p "$(direnv_layout_dir)"
    if has xattr; then
        xattr -w com.dropbox.ignored 1 "$(direnv_layout_dir)"
    fi

    # This seems like a reasonable version for using with ansible
    use pyenv 3.10.4

    PATH_add "$(pwd)/bin"

    # Allow statements and log messages to immediately appear in the container logs
    export PYTHONUNBUFFERED="True"

}

main "$@"
